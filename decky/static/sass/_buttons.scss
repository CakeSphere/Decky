.btn,
button {
  background-color: tint($color-background, 6%);
  border: 1px solid tint($color-border-strong, 15%);
  border-radius: $border-radius;
  box-shadow: inset 0 -2px 0 $color-shadow,
              inset 0 0 4px $color-highlight,
              0 2px 3px $color-bevel;
  color: shade($color-text, 15%);
  cursor: pointer;
  display: inline-block;
  font-family: $font-family-text;
  font-size: $font-size-default;
  margin-bottom: 10px;
  margin-right: 6px;
  max-width: 100%;
  overflow: hidden;
  padding: 0.5rem 0.7rem;
  text-decoration: none;
  text-overflow: ellipsis;
  text-shadow: 0 1px 2px $color-bevel;
  transition: color $transition,
              border-color $transition,
              background $transition;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;

  &:hover,
  &:focus {
    background: tint($color-background, 10%);
    color: $color-text;
    text-shadow: 0 1px 2px $color-bevel;
    // Set symbols' strokes adjust as text color does
    i {
      text-shadow: none;
      -webkit-text-stroke: 0.03em $color-text;
      text-stroke: 0.03em $color-text;

      &::after { transform: translateX(3px) rotate(45deg); }
      &.ss-grad {
        -webkit-text-stroke: 0.03em $color-border-strong;
        text-stroke: 0.03em $color-border-strong;
      }
    }
  }

  &:active {
    background: tint($color-background, 5%);
    outline: none;
    i { text-shadow: none; }
  }

  &:focus { outline: none; } // Removing default webkit outline
  &.active {
    background: tint($color-background, 2%);
    border-color: $color-bevel;
    box-shadow: inset 0 2px 0 $color-bevel;
    color: shade($color-text-weak, 15%);

    .cancel {
      fill: shade($color-text-weak, 15%);
    }
  }

  &.link {
    background: none;
    border-color: transparent;
    box-shadow: none;
    color: $color-primary;

    svg {
      fill: $color-primary;
      transition: fill $transition;
    }

    &:hover,
    &:focus {
      background: none;
      color: shade($color-primary, 15%);
      // Hacky span that we add to make underlines on text buttons work.
      span { @include underline(shade($color-primary, 15%), $color-background); }
      svg { fill: shade($color-primary, 15%); }
    }

    &:active {
      color: shade($color-primary, 25%);

      span {
        // Hacky span that we add to make underlines on text buttons work.
        @include underline(shade($color-primary, 25%), $color-background);
        color: shade($color-primary, 25%);
      }
    }
  }
  // Little x to remove filters
  .cancel {
    fill: $color-text-weak;
    height: 10px;
    margin-left: 0.25rem;
    position: relative;
    top: 2px;
    width: 10px;
  }
  // All of our button styles, using the btn mixin (_mixins.scss)
  &.primary { @include btn($color-primary); }
  &.w       { @include btn($color-mtg-w); }
  &.u       { @include btn($color-mtg-u); }
  &.r       { @include btn($color-mtg-r); }
  &.b       { @include btn($color-mtg-b); }
  &.g       { @include btn($color-mtg-g); }
  &.c       { @include btn($color-mtg-c); }
  i {
    // Set Icons
    bottom: 3px;
    margin-right: 0.5rem;
    position: relative;
    -webkit-text-stroke: 0.03em $color-text-weak;
    transition: -webkit-text-stroke $transition;

    &::after {
      background-color: transparentize($color-text-weak, 0.9);
      bottom: 0;
      box-shadow: 2px -2px 2px $color-shadow;
      content: '';
      height: 50px;
      left: -31px;
      position: absolute;
      right: 0;
      top: -15px;
      transform: rotate(45deg);
      transition: transform $transition;
      width: 50px;
    }
  }

  .mana.small {
    // Mana Icons
    margin-right: 1rem;
    position: relative;
    top: 2px;

    &::after {
      background-color: transparentize($color-text-weak, 0.9);
      bottom: 0;
      box-shadow: 2px -2px 2px $color-shadow;
      content: '';
      height: 50px;
      left: -31px;
      position: absolute;
      right: 0;
      top: -18px;
      transform: rotate(45deg);
      transition: transform $transition;
      width: 50px;
    }
  }

  &:hover .mana.small::after { transform: translateX(3px) rotate(45deg); }
}

.btn-group {
  // Currently used to indicate the amount of each Color in a deck
  display: inline-block;

  .btn,
  button {
    border-radius: 0;
    margin-right: -4px; // Removes the space next to an inline-block element
    padding: 0.5rem;
    position: relative;
    z-index: $z-index-baseline;

    &.w,
    &.u,
    &.r,
    &.b,
    &.g,
    &.c { z-index: $z-index-paging; } // Color buttons have higher priority
    &.primary { z-index: $z-index-paging-text; } // Primary buttons are highest priority
    &:first-child { border-radius: $border-radius 0 0 $border-radius; }
    &:last-child {
      border-radius: 0 $border-radius $border-radius 0;
      margin-right: 6px;
    }
  }

  &.card-costs,
  &.mana-available {
    .mana {
      left: calc(50% - 0.66665rem);
      opacity: 0.25;
      position: absolute;
      top: calc(50% - 0.66665rem);
      z-index: -1;
    }
  }
}

.tabs {
  box-shadow: inset 0 -4px 4px $color-shadow;

  a.btn {
    border-radius: 0;
    margin-bottom: 0;
    margin-right: -4px;
    &:first-child { border-radius: $border-radius 0 0; }
    &:last-child  { border-radius: 0 $border-radius 0 0; }
  }
}
